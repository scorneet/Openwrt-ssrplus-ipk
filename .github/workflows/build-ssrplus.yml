name: Build SSR Plus ipk
# Extended Description:
# This workflow builds the latest luci-app-ssr-plus as OpenWrt .ipk using the official SDK
# without compiling any firmware image. It fetches only minimal feeds (sbwml/openwrt_pkgs),
# caches the dl directory, uploads artifacts, and publishes a GitHub Release for online upgrade.

on:
  workflow_dispatch:
  push:
    paths:
      - ".github/workflows/build-ssrplus.yml"

env:
  # Set to "" to force snapshots. Default tries releases/24.10.2 then fallbacks to snapshots.
  OWRT_VER: "24.10.2"
  TARGET: "x86"
  SUBTARGET: "64"

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install build deps
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential git wget curl unzip \
            libncurses5-dev gawk gettext libssl-dev xsltproc \
            libxml-parser-perl zlib1g-dev file ca-certificates

      - name: Download OpenWrt SDK (auto-detect; fallback to snapshots)
        id: sdk
        shell: bash
        run: |
          set -e
          if [[ -n "${OWRT_VER}" ]]; then
            BASE_URL="https://downloads.openwrt.org/releases/${OWRT_VER}/targets/${TARGET}/${SUBTARGET}/"
            SDK_FILE=$(wget -qO- "${BASE_URL}" | grep -oE 'openwrt-sdk-[^"]+\.tar\.xz' | head -n1 || true)
          fi
          if [[ -z "${SDK_FILE}" ]]; then
            echo "Release SDK not found, falling back to snapshots..."
            BASE_URL="https://downloads.openwrt.org/snapshots/targets/${TARGET}/${SUBTARGET}/"
            SDK_FILE=$(wget -qO- "${BASE_URL}" | grep -oE 'openwrt-sdk-[^"]+\.tar\.xz' | head -n1)
          fi
          echo "SDK_URL=${BASE_URL}${SDK_FILE}"
          wget -q "${BASE_URL}${SDK_FILE}"
          tar -xJf "${SDK_FILE}"
          SDK_DIR=$(echo openwrt-sdk-*)
          mv "${SDK_DIR}" openwrt-sdk
          echo "SDK_DIR=openwrt-sdk" >> $GITHUB_ENV

      - name: Minimal feeds (only what we need)
        run: |
          cd "${SDK_DIR}"
          # sbwml feed 提供 ssr-plus 与主要依赖
          echo 'src-git sbwml https://github.com/sbwml/openwrt_pkgs.git;master' >> feeds.conf.default
          ./scripts/feeds update sbwml
          ./scripts/feeds install -p sbwml luci-app-ssr-plus
          ./scripts/feeds install -p sbwml xray-core v2ray-geoip v2ray-geosite \
            shadowsocks-libev-ss-local shadowsocks-libev-ss-redir

      - name: Cache downloads (dl)
        uses: actions/cache@v4
        with:
          path: ${{ env.SDK_DIR }}/dl
          key: dl-${{ env.OWRT_VER }}-${{ env.TARGET }}-${{ env.SUBTARGET }}
          restore-keys: |
            dl-

      - name: Generate .config (SSR Plus + core deps)
        run: |
          cd "${SDK_DIR}"
          cat >> .config <<'CFG'
          CONFIG_ALL_NONSHARED=y
          CONFIG_PACKAGE_luci-app-ssr-plus=y
          CONFIG_PACKAGE_xray-core=y
          CONFIG_PACKAGE_v2ray-geoip=y
          CONFIG_PACKAGE_v2ray-geosite=y
          CONFIG_PACKAGE_shadowsocks-libev-ss-local=y
          CONFIG_PACKAGE_shadowsocks-libev-ss-redir=y
          # Optional extra backends:
          # CONFIG_PACKAGE_naiveproxy=y
          # CONFIG_PACKAGE_kcptun-client=y
          CFG
          make defconfig

      - name: Build packages
        run: |
          cd "${SDK_DIR}"
          make package/luci-app-ssr-plus/compile -j"$(nproc)" V=s
          # 依赖包（尽量一起产出，失败不致停）
          make package/xray-core/compile -j"$(nproc)" V=s || true
          make package/v2ray-geoip/compile -j"$(nproc)" V=s || true
          make package/v2ray-geosite/compile -j"$(nproc)" V=s || true
          make package/shadowsocks-libev/compile -j"$(nproc)" V=s || true

      - name: Collect .ipk
        id: collect
        run: |
          cd "${SDK_DIR}"
          mkdir -p /tmp/ipk
          find bin/packages -name "*.ipk" -print -exec cp -f {} /tmp/ipk/ \;
          echo "OUT_DIR=/tmp/ipk" >> $GITHUB_ENV
          echo "found=$(ls -1 /tmp/ipk/*.ipk | wc -l)" >> $GITHUB_OUTPUT
          ls -lh /tmp/ipk

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ssrplus-ipk-${{ env.OWRT_VER || 'snapshots' }}-${{ env.TARGET }}-${{ env.SUBTARGET }}
          path: /tmp/ipk/*.ipk
          if-no-files-found: error
          retention-days: 7

      - name: Release (for online upgrade)
        if: steps.collect.outputs.found != '0'
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ssrplus-${{ env.OWRT_VER || 'snapshots' }}-${{ github.run_number }}
          name: "SSR Plus ipk ${{ env.OWRT_VER || 'snapshots' }} #${{ github.run_number }}"
          files: /tmp/ipk/*.ipk
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
